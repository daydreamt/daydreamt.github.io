<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Retrieval Augmented Generation on Bayesian dot ML</title>
    <link>http://bayesian.ml/tags/retrieval-augmented-generation/</link>
    <description>Recent content in Retrieval Augmented Generation on Bayesian dot ML</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 29 Sep 2024 21:46:20 +0200</lastBuildDate><atom:link href="http://bayesian.ml/tags/retrieval-augmented-generation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>30 lines of RAG without any chains</title>
      <link>http://bayesian.ml/posts/rag_in_30/</link>
      <pubDate>Sun, 29 Sep 2024 21:46:20 +0200</pubDate>
      
      <guid>http://bayesian.ml/posts/rag_in_30/</guid>
      <description>After being puzzled for a while, I have come to realize that the main appeal of Langchain&amp;rsquo;s and similar frameworks&#39;, is the ease to get started by copy pasting working code. This is not necessary! Here are ~30 lines of workable RAG code.
Create the environment with miniconda
conda create -n faissenv -c pytorch -c nvidia faiss-gpu=1.8.0 conda activate faissenv pip install transformers datasets tqdm sentence-transformers accelerate First we get our data and index it:</description>
    </item>
    
  </channel>
</rss>
